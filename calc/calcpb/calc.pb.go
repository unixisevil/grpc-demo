// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calc/calcpb/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumReq struct {
	FirstNum             int32    `protobuf:"varint,1,opt,name=first_num,json=firstNum,proto3" json:"first_num,omitempty"`
	SecondNum            int32    `protobuf:"varint,2,opt,name=second_num,json=secondNum,proto3" json:"second_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumReq) Reset()         { *m = SumReq{} }
func (m *SumReq) String() string { return proto.CompactTextString(m) }
func (*SumReq) ProtoMessage()    {}
func (*SumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{0}
}

func (m *SumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumReq.Unmarshal(m, b)
}
func (m *SumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumReq.Marshal(b, m, deterministic)
}
func (m *SumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumReq.Merge(m, src)
}
func (m *SumReq) XXX_Size() int {
	return xxx_messageInfo_SumReq.Size(m)
}
func (m *SumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SumReq.DiscardUnknown(m)
}

var xxx_messageInfo_SumReq proto.InternalMessageInfo

func (m *SumReq) GetFirstNum() int32 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *SumReq) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

type SumRes struct {
	Res                  int32    `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRes) Reset()         { *m = SumRes{} }
func (m *SumRes) String() string { return proto.CompactTextString(m) }
func (*SumRes) ProtoMessage()    {}
func (*SumRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{1}
}

func (m *SumRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRes.Unmarshal(m, b)
}
func (m *SumRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRes.Marshal(b, m, deterministic)
}
func (m *SumRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRes.Merge(m, src)
}
func (m *SumRes) XXX_Size() int {
	return xxx_messageInfo_SumRes.Size(m)
}
func (m *SumRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRes.DiscardUnknown(m)
}

var xxx_messageInfo_SumRes proto.InternalMessageInfo

func (m *SumRes) GetRes() int32 {
	if m != nil {
		return m.Res
	}
	return 0
}

type PrimeFactorReq struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorReq) Reset()         { *m = PrimeFactorReq{} }
func (m *PrimeFactorReq) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorReq) ProtoMessage()    {}
func (*PrimeFactorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{2}
}

func (m *PrimeFactorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorReq.Unmarshal(m, b)
}
func (m *PrimeFactorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorReq.Marshal(b, m, deterministic)
}
func (m *PrimeFactorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorReq.Merge(m, src)
}
func (m *PrimeFactorReq) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorReq.Size(m)
}
func (m *PrimeFactorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorReq.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorReq proto.InternalMessageInfo

func (m *PrimeFactorReq) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeFactorRes struct {
	PrimeFactor          int64    `protobuf:"varint,1,opt,name=primeFactor,proto3" json:"primeFactor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorRes) Reset()         { *m = PrimeFactorRes{} }
func (m *PrimeFactorRes) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorRes) ProtoMessage()    {}
func (*PrimeFactorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{3}
}

func (m *PrimeFactorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorRes.Unmarshal(m, b)
}
func (m *PrimeFactorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorRes.Marshal(b, m, deterministic)
}
func (m *PrimeFactorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorRes.Merge(m, src)
}
func (m *PrimeFactorRes) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorRes.Size(m)
}
func (m *PrimeFactorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorRes.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorRes proto.InternalMessageInfo

func (m *PrimeFactorRes) GetPrimeFactor() int64 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

type AvgReq struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgReq) Reset()         { *m = AvgReq{} }
func (m *AvgReq) String() string { return proto.CompactTextString(m) }
func (*AvgReq) ProtoMessage()    {}
func (*AvgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{4}
}

func (m *AvgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgReq.Unmarshal(m, b)
}
func (m *AvgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgReq.Marshal(b, m, deterministic)
}
func (m *AvgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgReq.Merge(m, src)
}
func (m *AvgReq) XXX_Size() int {
	return xxx_messageInfo_AvgReq.Size(m)
}
func (m *AvgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgReq.DiscardUnknown(m)
}

var xxx_messageInfo_AvgReq proto.InternalMessageInfo

func (m *AvgReq) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AvgRes struct {
	Avg                  float64  `protobuf:"fixed64,1,opt,name=avg,proto3" json:"avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgRes) Reset()         { *m = AvgRes{} }
func (m *AvgRes) String() string { return proto.CompactTextString(m) }
func (*AvgRes) ProtoMessage()    {}
func (*AvgRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{5}
}

func (m *AvgRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgRes.Unmarshal(m, b)
}
func (m *AvgRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgRes.Marshal(b, m, deterministic)
}
func (m *AvgRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgRes.Merge(m, src)
}
func (m *AvgRes) XXX_Size() int {
	return xxx_messageInfo_AvgRes.Size(m)
}
func (m *AvgRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgRes.DiscardUnknown(m)
}

var xxx_messageInfo_AvgRes proto.InternalMessageInfo

func (m *AvgRes) GetAvg() float64 {
	if m != nil {
		return m.Avg
	}
	return 0
}

type MaxReq struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxReq) Reset()         { *m = MaxReq{} }
func (m *MaxReq) String() string { return proto.CompactTextString(m) }
func (*MaxReq) ProtoMessage()    {}
func (*MaxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{6}
}

func (m *MaxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxReq.Unmarshal(m, b)
}
func (m *MaxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxReq.Marshal(b, m, deterministic)
}
func (m *MaxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxReq.Merge(m, src)
}
func (m *MaxReq) XXX_Size() int {
	return xxx_messageInfo_MaxReq.Size(m)
}
func (m *MaxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxReq.DiscardUnknown(m)
}

var xxx_messageInfo_MaxReq proto.InternalMessageInfo

func (m *MaxReq) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MaxRes struct {
	Max                  int64    `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxRes) Reset()         { *m = MaxRes{} }
func (m *MaxRes) String() string { return proto.CompactTextString(m) }
func (*MaxRes) ProtoMessage()    {}
func (*MaxRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{7}
}

func (m *MaxRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxRes.Unmarshal(m, b)
}
func (m *MaxRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxRes.Marshal(b, m, deterministic)
}
func (m *MaxRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxRes.Merge(m, src)
}
func (m *MaxRes) XXX_Size() int {
	return xxx_messageInfo_MaxRes.Size(m)
}
func (m *MaxRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxRes.DiscardUnknown(m)
}

var xxx_messageInfo_MaxRes proto.InternalMessageInfo

func (m *MaxRes) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SqrtReq struct {
	Number               float64  `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqrtReq) Reset()         { *m = SqrtReq{} }
func (m *SqrtReq) String() string { return proto.CompactTextString(m) }
func (*SqrtReq) ProtoMessage()    {}
func (*SqrtReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{8}
}

func (m *SqrtReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SqrtReq.Unmarshal(m, b)
}
func (m *SqrtReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SqrtReq.Marshal(b, m, deterministic)
}
func (m *SqrtReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqrtReq.Merge(m, src)
}
func (m *SqrtReq) XXX_Size() int {
	return xxx_messageInfo_SqrtReq.Size(m)
}
func (m *SqrtReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SqrtReq.DiscardUnknown(m)
}

var xxx_messageInfo_SqrtReq proto.InternalMessageInfo

func (m *SqrtReq) GetNumber() float64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SqrtRes struct {
	Root                 float64  `protobuf:"fixed64,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqrtRes) Reset()         { *m = SqrtRes{} }
func (m *SqrtRes) String() string { return proto.CompactTextString(m) }
func (*SqrtRes) ProtoMessage()    {}
func (*SqrtRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_53e5b7e388c7a849, []int{9}
}

func (m *SqrtRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SqrtRes.Unmarshal(m, b)
}
func (m *SqrtRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SqrtRes.Marshal(b, m, deterministic)
}
func (m *SqrtRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqrtRes.Merge(m, src)
}
func (m *SqrtRes) XXX_Size() int {
	return xxx_messageInfo_SqrtRes.Size(m)
}
func (m *SqrtRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SqrtRes.DiscardUnknown(m)
}

var xxx_messageInfo_SqrtRes proto.InternalMessageInfo

func (m *SqrtRes) GetRoot() float64 {
	if m != nil {
		return m.Root
	}
	return 0
}

func init() {
	proto.RegisterType((*SumReq)(nil), "calc.SumReq")
	proto.RegisterType((*SumRes)(nil), "calc.SumRes")
	proto.RegisterType((*PrimeFactorReq)(nil), "calc.PrimeFactorReq")
	proto.RegisterType((*PrimeFactorRes)(nil), "calc.PrimeFactorRes")
	proto.RegisterType((*AvgReq)(nil), "calc.AvgReq")
	proto.RegisterType((*AvgRes)(nil), "calc.AvgRes")
	proto.RegisterType((*MaxReq)(nil), "calc.MaxReq")
	proto.RegisterType((*MaxRes)(nil), "calc.MaxRes")
	proto.RegisterType((*SqrtReq)(nil), "calc.SqrtReq")
	proto.RegisterType((*SqrtRes)(nil), "calc.SqrtRes")
}

func init() { proto.RegisterFile("calc/calcpb/calc.proto", fileDescriptor_53e5b7e388c7a849) }

var fileDescriptor_53e5b7e388c7a849 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x4f, 0xc2, 0x30,
	0x18, 0x5e, 0x1d, 0x4e, 0x78, 0x51, 0x63, 0xde, 0x18, 0x62, 0x6a, 0x48, 0xb0, 0x46, 0xe5, 0x84,
	0x04, 0xcf, 0x1e, 0x50, 0xe3, 0x0d, 0x62, 0xb6, 0x9b, 0x17, 0x53, 0x66, 0x25, 0x24, 0x94, 0x41,
	0xbb, 0x2d, 0xfc, 0x65, 0xff, 0x85, 0xe9, 0x07, 0x3a, 0xd4, 0xe8, 0x05, 0xde, 0xe7, 0xab, 0xed,
	0x9e, 0x16, 0x5a, 0x29, 0x9f, 0xa7, 0xd7, 0xe6, 0x67, 0x39, 0xb1, 0x7f, 0xbd, 0xa5, 0xca, 0xf2,
	0x0c, 0x6b, 0x66, 0x66, 0x0f, 0x10, 0x25, 0x85, 0x8c, 0xc5, 0x0a, 0x4f, 0xa1, 0xf1, 0x36, 0x53,
	0x3a, 0x7f, 0x59, 0x14, 0xf2, 0x84, 0x74, 0x48, 0x77, 0x37, 0xae, 0x5b, 0x62, 0x5c, 0x48, 0x6c,
	0x03, 0x68, 0x91, 0x66, 0x8b, 0x57, 0xab, 0xee, 0x58, 0xb5, 0xe1, 0x98, 0x71, 0x21, 0x19, 0xf5,
	0xab, 0x68, 0x3c, 0x82, 0x50, 0x09, 0xed, 0xf3, 0x66, 0x64, 0x5d, 0x38, 0x7c, 0x52, 0x33, 0x29,
	0x1e, 0x79, 0x9a, 0x67, 0xca, 0xec, 0xd4, 0x82, 0x68, 0x51, 0xc8, 0x89, 0x50, 0xd6, 0x16, 0xc6,
	0x1e, 0xb1, 0xc1, 0x37, 0xa7, 0xc6, 0x0e, 0x34, 0x97, 0x5f, 0x8c, 0xb7, 0x57, 0x29, 0xd6, 0x81,
	0x68, 0x58, 0x4e, 0xff, 0x5a, 0x95, 0x7a, 0x87, 0x3d, 0x1b, 0x2f, 0xa7, 0x56, 0x26, 0xb1, 0x19,
	0x4d, 0x7a, 0xc4, 0xd7, 0xff, 0xa4, 0xad, 0xc3, 0xa6, 0x25, 0x5f, 0x7b, 0xd9, 0x8c, 0xec, 0x0c,
	0xf6, 0x92, 0x95, 0xca, 0x7f, 0xc6, 0xc9, 0x67, 0xbc, 0xbd, 0xb1, 0x68, 0x44, 0xa8, 0xa9, 0x2c,
	0xcb, 0xbd, 0xc1, 0xce, 0x83, 0x77, 0x02, 0xcd, 0x7b, 0x3e, 0x4f, 0x13, 0xa1, 0xca, 0x59, 0x2a,
	0xf0, 0x1c, 0xc2, 0xa4, 0x90, 0xb8, 0xdf, 0xb3, 0xf7, 0xe4, 0x2e, 0x86, 0x56, 0x91, 0x66, 0x01,
	0xde, 0x42, 0xb3, 0x52, 0x13, 0x1e, 0x3b, 0x79, 0xbb, 0x63, 0xfa, 0x1b, 0xab, 0x59, 0xd0, 0x27,
	0x78, 0x01, 0xe1, 0xb0, 0x9c, 0x6e, 0xf6, 0x70, 0xe5, 0xd1, 0x2a, 0xd2, 0x2c, 0xe8, 0x12, 0xbc,
	0x82, 0x70, 0xc4, 0xd7, 0x1b, 0x9b, 0x6b, 0x89, 0x56, 0x91, 0xb5, 0xf5, 0x09, 0x5e, 0x42, 0xcd,
	0x7c, 0x22, 0x1e, 0xf8, 0x63, 0xba, 0x46, 0xe8, 0x16, 0xd4, 0x2c, 0xb8, 0xab, 0x3f, 0x47, 0xee,
	0x11, 0x4e, 0x22, 0xfb, 0x00, 0x6f, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x8e, 0x19, 0x9d,
	0x9a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalcServiceClient is the client API for CalcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcServiceClient interface {
	Sum(ctx context.Context, in *SumReq, opts ...grpc.CallOption) (*SumRes, error)
	PrimeFactor(ctx context.Context, in *PrimeFactorReq, opts ...grpc.CallOption) (CalcService_PrimeFactorClient, error)
	Avg(ctx context.Context, opts ...grpc.CallOption) (CalcService_AvgClient, error)
	Max(ctx context.Context, opts ...grpc.CallOption) (CalcService_MaxClient, error)
	Sqrt(ctx context.Context, in *SqrtReq, opts ...grpc.CallOption) (*SqrtRes, error)
}

type calcServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalcServiceClient(cc *grpc.ClientConn) CalcServiceClient {
	return &calcServiceClient{cc}
}

func (c *calcServiceClient) Sum(ctx context.Context, in *SumReq, opts ...grpc.CallOption) (*SumRes, error) {
	out := new(SumRes)
	err := c.cc.Invoke(ctx, "/calc.CalcService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcServiceClient) PrimeFactor(ctx context.Context, in *PrimeFactorReq, opts ...grpc.CallOption) (CalcService_PrimeFactorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[0], "/calc.CalcService/PrimeFactor", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServicePrimeFactorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalcService_PrimeFactorClient interface {
	Recv() (*PrimeFactorRes, error)
	grpc.ClientStream
}

type calcServicePrimeFactorClient struct {
	grpc.ClientStream
}

func (x *calcServicePrimeFactorClient) Recv() (*PrimeFactorRes, error) {
	m := new(PrimeFactorRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcServiceClient) Avg(ctx context.Context, opts ...grpc.CallOption) (CalcService_AvgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[1], "/calc.CalcService/Avg", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServiceAvgClient{stream}
	return x, nil
}

type CalcService_AvgClient interface {
	Send(*AvgReq) error
	CloseAndRecv() (*AvgRes, error)
	grpc.ClientStream
}

type calcServiceAvgClient struct {
	grpc.ClientStream
}

func (x *calcServiceAvgClient) Send(m *AvgReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calcServiceAvgClient) CloseAndRecv() (*AvgRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AvgRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcServiceClient) Max(ctx context.Context, opts ...grpc.CallOption) (CalcService_MaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[2], "/calc.CalcService/Max", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServiceMaxClient{stream}
	return x, nil
}

type CalcService_MaxClient interface {
	Send(*MaxReq) error
	Recv() (*MaxRes, error)
	grpc.ClientStream
}

type calcServiceMaxClient struct {
	grpc.ClientStream
}

func (x *calcServiceMaxClient) Send(m *MaxReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calcServiceMaxClient) Recv() (*MaxRes, error) {
	m := new(MaxRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcServiceClient) Sqrt(ctx context.Context, in *SqrtReq, opts ...grpc.CallOption) (*SqrtRes, error) {
	out := new(SqrtRes)
	err := c.cc.Invoke(ctx, "/calc.CalcService/Sqrt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalcServiceServer is the server API for CalcService service.
type CalcServiceServer interface {
	Sum(context.Context, *SumReq) (*SumRes, error)
	PrimeFactor(*PrimeFactorReq, CalcService_PrimeFactorServer) error
	Avg(CalcService_AvgServer) error
	Max(CalcService_MaxServer) error
	Sqrt(context.Context, *SqrtReq) (*SqrtRes, error)
}

// UnimplementedCalcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalcServiceServer struct {
}

func (*UnimplementedCalcServiceServer) Sum(ctx context.Context, req *SumReq) (*SumRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalcServiceServer) PrimeFactor(req *PrimeFactorReq, srv CalcService_PrimeFactorServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeFactor not implemented")
}
func (*UnimplementedCalcServiceServer) Avg(srv CalcService_AvgServer) error {
	return status.Errorf(codes.Unimplemented, "method Avg not implemented")
}
func (*UnimplementedCalcServiceServer) Max(srv CalcService_MaxServer) error {
	return status.Errorf(codes.Unimplemented, "method Max not implemented")
}
func (*UnimplementedCalcServiceServer) Sqrt(ctx context.Context, req *SqrtReq) (*SqrtRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sqrt not implemented")
}

func RegisterCalcServiceServer(s *grpc.Server, srv CalcServiceServer) {
	s.RegisterService(&_CalcService_serviceDesc, srv)
}

func _CalcService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.CalcService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServiceServer).Sum(ctx, req.(*SumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalcService_PrimeFactor_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeFactorReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalcServiceServer).PrimeFactor(m, &calcServicePrimeFactorServer{stream})
}

type CalcService_PrimeFactorServer interface {
	Send(*PrimeFactorRes) error
	grpc.ServerStream
}

type calcServicePrimeFactorServer struct {
	grpc.ServerStream
}

func (x *calcServicePrimeFactorServer) Send(m *PrimeFactorRes) error {
	return x.ServerStream.SendMsg(m)
}

func _CalcService_Avg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalcServiceServer).Avg(&calcServiceAvgServer{stream})
}

type CalcService_AvgServer interface {
	SendAndClose(*AvgRes) error
	Recv() (*AvgReq, error)
	grpc.ServerStream
}

type calcServiceAvgServer struct {
	grpc.ServerStream
}

func (x *calcServiceAvgServer) SendAndClose(m *AvgRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calcServiceAvgServer) Recv() (*AvgReq, error) {
	m := new(AvgReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalcService_Max_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalcServiceServer).Max(&calcServiceMaxServer{stream})
}

type CalcService_MaxServer interface {
	Send(*MaxRes) error
	Recv() (*MaxReq, error)
	grpc.ServerStream
}

type calcServiceMaxServer struct {
	grpc.ServerStream
}

func (x *calcServiceMaxServer) Send(m *MaxRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calcServiceMaxServer) Recv() (*MaxReq, error) {
	m := new(MaxReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalcService_Sqrt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqrtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServiceServer).Sqrt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.CalcService/Sqrt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServiceServer).Sqrt(ctx, req.(*SqrtReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.CalcService",
	HandlerType: (*CalcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalcService_Sum_Handler,
		},
		{
			MethodName: "Sqrt",
			Handler:    _CalcService_Sqrt_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeFactor",
			Handler:       _CalcService_PrimeFactor_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Avg",
			Handler:       _CalcService_Avg_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Max",
			Handler:       _CalcService_Max_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calc/calcpb/calc.proto",
}
